{"ast":null,"code":"import axios from\"axios\";// export interface IImage {\n//   id: number;\n//   url: string;\n//   translated_caption: string | null;\n// }\n// 이미지 데이터를 불러오는 함수\nexport function getImages2(){return axios.get(\"/api/images/\").then(response=>{// 응답에서 이미지 데이터 배열을 반환합니다.\nreturn response.data;}).catch(error=>{// 에러 처리를 여기서 수행할 수 있습니다.\nconsole.error(\"Error fetching images:\",error);return[];// 에러가 발생한 경우 빈 배열을 반환할 수 있습니다.\n});}// api.js\nexport function getImages(){return axios.get(\"api/sortimages/\").then(response=>response.data).catch(error=>{console.error(\"Error fetching images:\",error);return[];});}export const uploadImage=imageFile=>{const formData=new FormData();formData.append(\"image\",imageFile);return axios.post(\"/api/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}}).then(response=>response.data).catch(error=>{console.error(\"Error uploading image:\",error);throw error;});};","map":{"version":3,"names":["axios","getImages2","get","then","response","data","catch","error","console","getImages","uploadImage","imageFile","formData","FormData","append","post","headers"],"sources":["/Users/taegeonkim/2023-2/머신러닝/Project/Algo_app/Algo_NIC/ok-app/src/api.ts"],"sourcesContent":["import axios from \"axios\";\n\n// export interface IImage {\n//   id: number;\n//   url: string;\n//   translated_caption: string | null;\n// }\n\nexport interface IImageWithCaption {\n  id: number;  // Django 모델은 기본적으로 id 필드를 가집니다.\n  image: string;  // 이미지 URL을 나타냅니다. upload_to='images/'로 인해 URL 형태를 가질 것입니다.\n  caption: string;  // 이미지의 캡션을 나타냅니다.\n  translated_caption: string | null;  // 번역된 캡션, 없을 수도 있으므로 null이 가능합니다.\n  created_at: string;  // 생성 시간, ISO 문자열 형식을 가정합니다.\n}\n\n// 이미지 데이터를 불러오는 함수\nexport function getImages2() {\n  return axios.get<IImageWithCaption[]>(\"/api/images/\")\n    .then((response) => {\n      // 응답에서 이미지 데이터 배열을 반환합니다.\n      return response.data;\n    })\n    .catch((error) => {\n      // 에러 처리를 여기서 수행할 수 있습니다.\n      console.error(\"Error fetching images:\", error);\n      return []; // 에러가 발생한 경우 빈 배열을 반환할 수 있습니다.\n    });\n}\n\n// api.js\n\nexport function getImages() {\n  return axios.get(\"api/sortimages/\")\n    .then(response => response.data)\n    .catch(error => {\n      console.error(\"Error fetching images:\", error);\n      return [];\n    });\n}\n\n\nexport const uploadImage = (imageFile: File) => {\n  const formData = new FormData();\n  formData.append(\"image\", imageFile);\n\n  return axios.post(\"/api/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  }).then(response => response.data)\n    .catch(error => {\n      console.error(\"Error uploading image:\", error);\n      throw error;\n    });\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA;AACA;AAUA;AACA,MAAO,SAAS,CAAAC,UAAUA,CAAA,CAAG,CAC3B,MAAO,CAAAD,KAAK,CAACE,GAAG,CAAsB,cAAc,CAAC,CAClDC,IAAI,CAAEC,QAAQ,EAAK,CAClB;AACA,MAAO,CAAAA,QAAQ,CAACC,IAAI,CACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChB;AACAC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,EAAE,CAAE;AACb,CAAC,CAAC,CACN,CAEA;AAEA,MAAO,SAAS,CAAAE,SAASA,CAAA,CAAG,CAC1B,MAAO,CAAAT,KAAK,CAACE,GAAG,CAAC,iBAAiB,CAAC,CAChCC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,EAAE,CACX,CAAC,CAAC,CACN,CAGA,MAAO,MAAM,CAAAG,WAAW,CAAIC,SAAe,EAAK,CAC9C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEH,SAAS,CAAC,CAEnC,MAAO,CAAAX,KAAK,CAACe,IAAI,CAAC,aAAa,CAAEH,QAAQ,CAAE,CACzCI,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CAACb,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}