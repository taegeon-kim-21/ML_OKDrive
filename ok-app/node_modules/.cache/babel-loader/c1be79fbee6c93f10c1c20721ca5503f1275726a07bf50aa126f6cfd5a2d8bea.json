{"ast":null,"code":"var _jsxFileName = \"/Users/taegeonkim/2023-2/\\u1106\\u1165\\u1109\\u1175\\u11AB\\u1105\\u1165\\u1102\\u1175\\u11BC/Project/Algo_app/Algo_NIC/ok-app/src/Routes/Upload.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { uploadImage } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  max-width: 1000px; // 최대 너비 설정\n  width: 90%; // 전체 너비의 90%를 차지하도록 설정\n  margin: 20px auto;\n  margin-top: 180px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n_c = Wrapper;\nconst Title = styled.h1`\n  margin-top: 15px;\n  color: ${props => props.theme.gray};\n  font-size: 42px;\n  margin-bottom: 15px;\n`;\n_c2 = Title;\nconst UploadForm = styled.form`\n  width: 800px;\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n_c3 = UploadForm;\nconst InputButton = styled.div`\n  width: 200px;\n  height: 40px;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n  background-color: #c3c3c3a2;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 400;\n  transition: 0.3s;\n  color: black;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c4 = InputButton;\nconst FileLog = styled.div`\n  margin-top: 10px;\n  color: #555;\n  font-style: italic;\n`;\n_c5 = FileLog;\nconst GenerateButton = styled.div`\n  width: 200px;\n  height: 40px;\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 10px;\n  opacity: 0.8;\n  transition: 0.3s;\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c6 = GenerateButton;\nconst Footer = styled.footer`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 400;\n  color: #007bff;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c7 = Footer;\nconst CaptionDisplay = styled.div`\n  color: black; \n  font-size: 16px; \n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nconst ImagePreview = styled.img`\n  max-width: 100%; // 이미지가 Wrapper 너비를 넘지 않도록 설정\n  max-height: 400px; // 이미지의 최대 높이 설정\n  height: auto; // 이미지 비율 유지\n  margin-top: 20px;\n`;\n_c8 = ImagePreview;\nfunction Upload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileLog, setFileLog] = useState('No image selected.');\n  const [caption, setCaption] = useState('');\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(null); // 이미지 미리보기 URL 상태\n\n  // const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const file = event.target.files && event.target.files[0];\n  //   if (file) {\n  //     setSelectedFile(file);\n  //     setFileLog(`Selected Image: ${file.name}`);\n  //   } else {\n  //     setFileLog('No image selected.');\n  //   }\n  // };\n  const handleFileChange = event => {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileLog(`Selected Image: ${file.name}`);\n\n      // 이미지 미리보기 URL 생성\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreviewUrl(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setFileLog('No image selected.');\n      setImagePreviewUrl(null); // 이미지 미리보기 URL 초기화\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile) {\n      try {\n        const response = await uploadImage(selectedFile);\n        setCaption(response.translated_caption); // 서버로부터 받은 캡션을 상태에 저장\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        setCaption('Failed to generate caption.'); // 오류 발생 시 메시지 설정\n      }\n    } else {\n      alert('Please select an image to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Image Captioning with AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputButton, {\n          as: \"label\",\n          htmlFor: \"image-upload\",\n          children: \"Choose an Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image-upload\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileLog, {\n          children: fileLog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), imagePreviewUrl && /*#__PURE__*/_jsxDEV(ImagePreview, {\n          src: imagePreviewUrl,\n          alt: \"Image Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(GenerateButton, {\n          as: \"button\",\n          type: \"submit\",\n          children: \"Generate Caption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Upload, \"7UrtgCP0zLmngbXZ1Hy4McDO+mA=\");\n_c9 = Upload;\nexport default Upload;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"UploadForm\");\n$RefreshReg$(_c4, \"InputButton\");\n$RefreshReg$(_c5, \"FileLog\");\n$RefreshReg$(_c6, \"GenerateButton\");\n$RefreshReg$(_c7, \"Footer\");\n$RefreshReg$(_c8, \"ImagePreview\");\n$RefreshReg$(_c9, \"Upload\");","map":{"version":3,"names":["useState","styled","uploadImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","_c","Title","h1","props","theme","gray","_c2","UploadForm","form","_c3","InputButton","_c4","FileLog","_c5","GenerateButton","_c6","Footer","footer","_c7","CaptionDisplay","ImagePreview","img","_c8","Upload","_s","selectedFile","setSelectedFile","fileLog","setFileLog","caption","setCaption","imagePreviewUrl","setImagePreviewUrl","handleFileChange","event","file","target","files","name","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","response","translated_caption","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","as","htmlFor","id","type","accept","onChange","style","display","src","alt","_c9","$RefreshReg$"],"sources":["/Users/taegeonkim/2023-2/머신러닝/Project/Algo_app/Algo_NIC/ok-app/src/Routes/Upload.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { uploadImage } from \"../api\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px; // 최대 너비 설정\n  width: 90%; // 전체 너비의 90%를 차지하도록 설정\n  margin: 20px auto;\n  margin-top: 180px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-top: 15px;\n  color: ${(props) => props.theme.gray};\n  font-size: 42px;\n  margin-bottom: 15px;\n`;\n\nconst UploadForm = styled.form`\n  width: 800px;\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst InputButton = styled.div`\n  width: 200px;\n  height: 40px;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n  background-color: #c3c3c3a2;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 400;\n  transition: 0.3s;\n  color: black;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst FileLog = styled.div`\n  margin-top: 10px;\n  color: #555;\n  font-style: italic;\n`;\n\nconst GenerateButton = styled.div`\n  width: 200px;\n  height: 40px;\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 10px;\n  opacity: 0.8;\n  transition: 0.3s;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Footer = styled.footer`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 400;\n  color: #007bff;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst CaptionDisplay = styled.div`\n  color: black; \n  font-size: 16px; \n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nconst ImagePreview = styled.img`\n  max-width: 100%; // 이미지가 Wrapper 너비를 넘지 않도록 설정\n  max-height: 400px; // 이미지의 최대 높이 설정\n  height: auto; // 이미지 비율 유지\n  margin-top: 20px;\n`;\n\n\n\nfunction Upload() {\n  const [selectedFile, setSelectedFile] = useState<null | File>(null);\n  const [fileLog, setFileLog] = useState('No image selected.');\n  const [caption, setCaption] = useState('');\n  const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null); // 이미지 미리보기 URL 상태\n\n\n  // const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const file = event.target.files && event.target.files[0];\n  //   if (file) {\n  //     setSelectedFile(file);\n  //     setFileLog(`Selected Image: ${file.name}`);\n  //   } else {\n  //     setFileLog('No image selected.');\n  //   }\n  // };\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileLog(`Selected Image: ${file.name}`);\n\n      // 이미지 미리보기 URL 생성\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreviewUrl(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setFileLog('No image selected.');\n      setImagePreviewUrl(null); // 이미지 미리보기 URL 초기화\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (selectedFile) {\n      try {\n        const response = await uploadImage(selectedFile);\n        setCaption(response.translated_caption); // 서버로부터 받은 캡션을 상태에 저장\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        setCaption('Failed to generate caption.'); // 오류 발생 시 메시지 설정\n      }\n    } else {\n      alert('Please select an image to upload.');\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Image Captioning with AI</Title>\n        <UploadForm onSubmit={handleSubmit}>\n          <InputButton as=\"label\" htmlFor=\"image-upload\">Choose an Image</InputButton>\n          <input\n            id=\"image-upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            style={{ display: 'none' }}\n          />\n          <FileLog>{fileLog}</FileLog>\n          {imagePreviewUrl && <ImagePreview src={imagePreviewUrl} alt=\"Image Preview\" />}\n          \n          <GenerateButton as=\"button\" type=\"submit\">Generate Caption</GenerateButton>\n        </UploadForm>\n        \n        {/* {caption && <CaptionDisplay>{caption}</CaptionDisplay>} */}\n        \n      </Wrapper>\n      <Footer>Save</Footer>\n    </>\n  );\n}\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}