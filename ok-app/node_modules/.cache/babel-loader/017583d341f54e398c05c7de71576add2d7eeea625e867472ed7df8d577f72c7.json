{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/taegeonkim/2023-2/\\u1106\\u1165\\u1109\\u1175\\u11AB\\u1105\\u1165\\u1102\\u1175\\u11BC/Project/Algo_app/Algo_NIC/ok-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import{useState}from\"react\";import styled from\"styled-components\";import{uploadImage}from\"../api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 1000px; // \\uCD5C\\uB300 \\uB108\\uBE44 \\uC124\\uC815\\n  width: 90%; // \\uC804\\uCCB4 \\uB108\\uBE44\\uC758 90%\\uB97C \\uCC28\\uC9C0\\uD558\\uB3C4\\uB85D \\uC124\\uC815\\n  margin: 20px auto;\\n  margin-top: 180px;\\n  padding: 20px;\\n  background-color: #f9f9f9;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-evenly;\\n  align-items: center;\\n\"])));const Title=styled.h1(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-top: 15px;\\n  color: \",\";\\n  font-size: 42px;\\n  margin-bottom: 15px;\\n\"])),props=>props.theme.gray);const UploadForm=styled.form(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 800px;\\n  height: 180px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-evenly;\\n  align-items: center;\\n\"])));const InputButton=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 200px;\\n  height: 40px;\\n  border: 1px solid #ccc;\\n  display: inline-block;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n  background-color: #c3c3c3a2;\\n  border-radius: 4px;\\n  margin-bottom: 10px;\\n  font-size: 18px;\\n  font-weight: 400;\\n  transition: 0.3s;\\n  color: black;\\n  opacity: 0.7;\\n  &:hover {\\n    opacity: 1;\\n  }\\n\"])));const FileLog=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n  color: #555;\\n  font-style: italic;\\n\"])));const GenerateButton=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 200px;\\n  height: 40px;\\n  background-color: #007bff;\\n  color: white;\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  font-size: 18px;\\n  font-weight: 400;\\n  margin-top: 10px;\\n  opacity: 0.8;\\n  transition: 0.3s;\\n  &:hover {\\n    opacity: 1;\\n  }\\n\"])));const Footer=styled.footer(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  text-align: center;\\n  font-weight: 400;\\n  color: #007bff;\\n  text-decoration: none;\\n  &:hover {\\n    text-decoration: underline;\\n  }\\n\"])));const CaptionDisplay=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  color: black; \\n  font-size: 16px; \\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n\"])));function Upload(){const[selectedFile,setSelectedFile]=useState(null);const[fileLog,setFileLog]=useState('No image selected.');const[caption,setCaption]=useState('');const handleFileChange=event=>{const file=event.target.files&&event.target.files[0];if(file){setSelectedFile(file);setFileLog(\"Selected Image: \".concat(file.name));}else{setFileLog('No image selected.');}};const handleSubmit=async event=>{event.preventDefault();if(selectedFile){try{const response=await uploadImage(selectedFile);setCaption(response.translated_caption);// 서버로부터 받은 캡션을 상태에 저장\n}catch(error){console.error('Error uploading image:',error);setCaption('Failed to generate caption.');// 오류 발생 시 메시지 설정\n}}else{alert('Please select an image to upload.');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Title,{children:\"Image Captioning with AI\"}),/*#__PURE__*/_jsxs(UploadForm,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(InputButton,{as:\"label\",htmlFor:\"image-upload\",children:\"Choose an Image\"}),/*#__PURE__*/_jsx(\"input\",{id:\"image-upload\",type:\"file\",accept:\"image/*\",onChange:handleFileChange,style:{display:'none'}}),/*#__PURE__*/_jsx(FileLog,{children:fileLog}),/*#__PURE__*/_jsx(GenerateButton,{as:\"button\",type:\"submit\",children:\"Generate Caption\"})]}),caption&&/*#__PURE__*/_jsx(CaptionDisplay,{children:caption})]}),/*#__PURE__*/_jsx(Footer,{children:\"Save\"})]});}export default Upload;","map":{"version":3,"names":["useState","styled","uploadImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Wrapper","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","props","theme","gray","UploadForm","form","_templateObject3","InputButton","_templateObject4","FileLog","_templateObject5","GenerateButton","_templateObject6","Footer","footer","_templateObject7","CaptionDisplay","_templateObject8","Upload","selectedFile","setSelectedFile","fileLog","setFileLog","caption","setCaption","handleFileChange","event","file","target","files","concat","name","handleSubmit","preventDefault","response","translated_caption","error","console","alert","children","onSubmit","as","htmlFor","id","type","accept","onChange","style","display"],"sources":["/Users/taegeonkim/2023-2/머신러닝/Project/Algo_app/Algo_NIC/ok-app/src/Routes/Upload.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { uploadImage } from \"../api\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px; // 최대 너비 설정\n  width: 90%; // 전체 너비의 90%를 차지하도록 설정\n  margin: 20px auto;\n  margin-top: 180px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-top: 15px;\n  color: ${(props) => props.theme.gray};\n  font-size: 42px;\n  margin-bottom: 15px;\n`;\n\nconst UploadForm = styled.form`\n  width: 800px;\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst InputButton = styled.div`\n  width: 200px;\n  height: 40px;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n  background-color: #c3c3c3a2;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 400;\n  transition: 0.3s;\n  color: black;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst FileLog = styled.div`\n  margin-top: 10px;\n  color: #555;\n  font-style: italic;\n`;\n\nconst GenerateButton = styled.div`\n  width: 200px;\n  height: 40px;\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 10px;\n  opacity: 0.8;\n  transition: 0.3s;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Footer = styled.footer`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 400;\n  color: #007bff;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst CaptionDisplay = styled.div`\n  color: black; \n  font-size: 16px; \n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\n\n\nfunction Upload() {\n  const [selectedFile, setSelectedFile] = useState<null | File>(null);\n  const [fileLog, setFileLog] = useState('No image selected.');\n  const [caption, setCaption] = useState('');\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileLog(`Selected Image: ${file.name}`);\n    } else {\n      setFileLog('No image selected.');\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (selectedFile) {\n      try {\n        const response = await uploadImage(selectedFile);\n        setCaption(response.translated_caption); // 서버로부터 받은 캡션을 상태에 저장\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        setCaption('Failed to generate caption.'); // 오류 발생 시 메시지 설정\n      }\n    } else {\n      alert('Please select an image to upload.');\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Image Captioning with AI</Title>\n        <UploadForm onSubmit={handleSubmit}>\n          <InputButton as=\"label\" htmlFor=\"image-upload\">Choose an Image</InputButton>\n          <input\n            id=\"image-upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            style={{ display: 'none' }}\n          />\n          <FileLog>{fileLog}</FileLog>\n          <GenerateButton as=\"button\" type=\"submit\">Generate Caption</GenerateButton>\n        </UploadForm>\n        {caption && <CaptionDisplay>{caption}</CaptionDisplay>}\n        \n      </Wrapper>\n      <Footer>Save</Footer>\n    </>\n  );\n}\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}