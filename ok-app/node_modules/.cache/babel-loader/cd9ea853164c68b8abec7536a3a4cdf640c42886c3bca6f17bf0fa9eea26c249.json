{"ast":null,"code":"import axios from \"axios\";\n\n// export interface IImage {\n//   id: number;\n//   url: string;\n//   translated_caption: string | null;\n// }\n\n// 이미지 데이터를 불러오는 함수\nexport function getImages() {\n  return axios.get(\"/api/images/\").then(response => {\n    // 응답에서 이미지 데이터 배열을 반환합니다.\n    return response.data;\n  }).catch(error => {\n    // 에러 처리를 여기서 수행할 수 있습니다.\n    console.error(\"Error fetching images:\", error);\n    return []; // 에러가 발생한 경우 빈 배열을 반환할 수 있습니다.\n  });\n}\n\n// api.js\n\nexport function getImages2() {\n  return axios.get(\"/api/images/\").then(response => response.data).catch(error => {\n    console.error(\"Error fetching images:\", error);\n    return [];\n  });\n}\nexport const uploadImage = imageFile => {\n  const formData = new FormData();\n  formData.append(\"image\", imageFile);\n  return axios.post(\"/api/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(response => response.data).catch(error => {\n    console.error(\"Error uploading image:\", error);\n    throw error;\n  });\n};","map":{"version":3,"names":["axios","getImages","get","then","response","data","catch","error","console","getImages2","uploadImage","imageFile","formData","FormData","append","post","headers"],"sources":["/Users/taegeonkim/2023-2/머신러닝/Project/Algo_app/Algo_NIC/ok-app/src/api.ts"],"sourcesContent":["import axios from \"axios\";\n\n// export interface IImage {\n//   id: number;\n//   url: string;\n//   translated_caption: string | null;\n// }\n\nexport interface IImageWithCaption {\n  id: number;  // Django 모델은 기본적으로 id 필드를 가집니다.\n  image: string;  // 이미지 URL을 나타냅니다. upload_to='images/'로 인해 URL 형태를 가질 것입니다.\n  caption: string;  // 이미지의 캡션을 나타냅니다.\n  translated_caption: string | null;  // 번역된 캡션, 없을 수도 있으므로 null이 가능합니다.\n  created_at: string;  // 생성 시간, ISO 문자열 형식을 가정합니다.\n}\n\n// 이미지 데이터를 불러오는 함수\nexport function getImages() {\n  return axios.get<IImageWithCaption[]>(\"/api/images/\")\n    .then((response) => {\n      // 응답에서 이미지 데이터 배열을 반환합니다.\n      return response.data;\n    })\n    .catch((error) => {\n      // 에러 처리를 여기서 수행할 수 있습니다.\n      console.error(\"Error fetching images:\", error);\n      return []; // 에러가 발생한 경우 빈 배열을 반환할 수 있습니다.\n    });\n}\n\n// api.js\n\nexport function getImages2() {\n  return axios.get(\"/api/images/\")\n    .then(response => response.data)\n    .catch(error => {\n      console.error(\"Error fetching images:\", error);\n      return [];\n    });\n}\n\n\nexport const uploadImage = (imageFile: File) => {\n  const formData = new FormData();\n  formData.append(\"image\", imageFile);\n\n  return axios.post(\"/api/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  }).then(response => response.data)\n    .catch(error => {\n      console.error(\"Error uploading image:\", error);\n      throw error;\n    });\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;;AAUA;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B,OAAOD,KAAK,CAACE,GAAG,CAAsB,cAAc,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACA,OAAOA,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChB;IACAC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE,CAAC,CAAC;EACb,CAAC,CAAC;AACN;;AAEA;;AAEA,OAAO,SAASE,UAAUA,CAAA,EAAG;EAC3B,OAAOT,KAAK,CAACE,GAAG,CAAC,cAAc,CAAC,CAC7BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX,CAAC,CAAC;AACN;AAGA,OAAO,MAAMG,WAAW,GAAIC,SAAe,IAAK;EAC9C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;EAEnC,OAAOX,KAAK,CAACe,IAAI,CAAC,aAAa,EAAEH,QAAQ,EAAE;IACzCI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACb,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}